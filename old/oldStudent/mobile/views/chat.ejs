<!DOCTYPE html>
<html lang="ru">
<head>
	<meta charset="UTF-8">
	<link rel="icon" type="img/png" href="/mobile/img/logo.png">
	<link rel="stylesheet" href="/mobile/css/chat.css?ver=<%=version%>.04">
	<meta name="viewport" content="width=device-width, initial-scale=1 user-scalable=no">
	<%include ./parts/metrica%>
</head> 
<body>
<%include ./parts/header%>
<div class = 'chat_container'>
	<div id = 'chat' class = 'chat'>
		<div class="bottom_arrow" id="bottom_arrow" onclick="downChat()">
			<img src="mobile/img/bottom-arrow.svg" alt="">
		</div>		

		<div style="overflow: hidden;height: 90%; position:relative; transition: 0.3s" id="chat_msgs_block">
			<div style="overflow-x: hidden;overflow-y: auto; margin-right:-15%;height:100%; width:115%; padding-right:13.75%;" id="scrollBlockForChat">
				<div id = 'msgs' class = 'msgs'>
					<img src = 'mobile/img/logo.png' class = 'logotip' style = 'margin-top: 50px; width: 400px; max-height: 400px'>
				</div>
				<div id="scrollForChat" class="scroll" onmousedown="personalScrollForChat()"></div>
			</div>
		</div>	


		<div class = 'box' style='display:none'>
			<span id="iAmWriting" style="visibility: hidden; font-size: 18px; color: skyblue"></span>
			<div class = 'msg_div'>
				<textarea id = 'text' onkeypress="if (event.keyCode==13){ sendMes(event);}" onclick="changeMainBlock(true)" onfocusout="changeMainBlock(false)"  placeholder="Введите сообщение" class = 'text' type="text"></textarea>
				<img src="/mobile/img/paperclip.png" title="Прикрепить файл" class  = 'screpka' onclick="document.getElementById('file').click()">
				<img class='send_message' id='send' title="Отправить" src="https://www.applozic.com/assets/resources/lib/images/icon-send.png" onclick = 'sendMes(event)' height="25px" />	
				<img src="/mobile/img/microfon.png" class="microfon" id='microfon'>
				<input type="file" id = 'file' style="display: none">
			</div>
			<div id ='files' class= 'files'>
			</div>
		</div>
	</div>
</div>
<script type="text/javascript">

	// Глобальные переменные
	window.content = document.getElementById('chat');
	window.msgs = document.getElementById('msgs');
	window.files = document.getElementById('files');
	window.file = document.getElementById('file');
	window.audio = new Audio();
	window.current_time_td;
	window.current_progress;
	window.current_img;
	window.controlBox = content.querySelector('.box');
	window.group_id;
	window.onload = inputMove();
	window.microfon = document.getElementById('microfon');	
	window.mes_id;
	window.loader = true;
	window.answerMes = -1;
	//Глобальные переменные для скролла
	window.chat_blockVSbody = null;
	window.chat_StudentsCount = null;
	window.chat_scrollPerson = false;
	window.chat_msgsChildren = null;
	window.chat_msgs_block = document.getElementById('chat_msgs_block');
	window.chat_scrollBar = document.getElementById('scrollForChat');
	window.chat_block = document.getElementById('scrollBlockForChat');

	POST('/chat','method=GET', (res, stat)=>
		{
			if(stat == 200)
			{
				let newMes = document.getElementById('chater');
				if(newMes.children[1]){
					newMes.removeChild(newMes.children[1]);
				}

				let messages = res.body;
				msgs.innerHTML = '';
				controlBox.style.display = 'block';
				for(let i = messages.length -1; i >= 0; i--)
					addMessage(messages[i], msgs);

				mes_id = messages[messages.length-1].mes_id;
				chat_block.scrollTo({
					    top: chat_block.scrollHeight,
					    behavior: "smooth"
					});

				chat_blockVSbody = chat_block.clientHeight / msgs.clientHeight;
				chat_scrollBar.style.height = (chat_block.clientHeight * chat_blockVSbody) + 'px';
				chat_msgsChildren = msgs.children.length;
				for (var i = 0; i < msgs.children.length; i++) {	
					chat_StudentsCount += msgs.children[i].clientHeight;
					var style = window.getComputedStyle(msgs.children[i]);
					var marginTop = style.getPropertyValue('margin-top'); 
					chat_StudentsCount += Number(marginTop.substring(0, marginTop.length - 2))
				}
				// StudentsCount = msgs.clientHeight;
				chat_StudentsCount /= chat_block.clientHeight;
				chat_block.scrollTo(0, chat_block.scrollHeight);
				if(msgs.clientHeight < chat_block.clientHeight)
					chat_scrollBar.style.display = 'none'
				else{
					chat_scrollBar.style.display = 'block';
					ScrollChatActiv();
				}
				group_id = messages[0].group_id;

				setTimeout(()=> {
						ws.send(JSON.stringify({
							notice: 8,
							group_id: `${group_id}`
						}));
					}, 2000)
			}
			else if(stat == 202)
			{
				controlBox.style.display = 'block';
			}
			else
			{
				content.innerHTML =
				`
				<div class="nopeGroup">
					<div class="list_head">У вас нет чата</div>
					<button class="deleteBtn" style="margin-top:50px" onclick="top.location.href='/courses'">Записаться на курс</buton>
				</div>
				`;
			}
		});
	listeners();

	let block = document.getElementById('msgs');

	block.onscroll = function() {
		if ((block.scrollHeight - block.scrollTop) > block.clientHeight + 500) 
		{
			document.getElementById('bottom_arrow').style.bottom = '15%';
			document.getElementById('bottom_arrow').style.opacity = '1';
			document.getElementById('bottom_arrow').style.visibility = 'visible';
		}
		else 
		{
			document.getElementById('bottom_arrow').style.bottom = '-15%';
			document.getElementById('bottom_arrow').style.opacity = '0';
			document.getElementById('bottom_arrow').style.visibility = 'hidden';
		}
	}


function sendMes(event)
{
	event.preventDefault();
	let fls = files.children;
	let box = document.getElementById('text');
	let text = box.value;
	text = text.trim();
	text = text.replace(/</g, '&lt;');
	text = text.replace(/>/g, '&gt;');
	if(fls.length > 0)
	{		
		for(let i = 0; i<fls.length; i++)
		{
			let type = fls[i].getAttribute('type');
			let path = fls[i].getAttribute('path');

			ws.send(JSON.stringify({
				notice: 1,
				group_id: `z`,
				content: path,
				type,
				reference: `${answerMes != -1 ? answerMes : ''}`,
				title: text
			}));
			if(answerMes != -1){
				if(teach)
					document.getElementById('mes' + answerMes).style.backgroundColor = '#fff'
				else document.getElementById('mes' + answerMes).style.backgroundColor = '#92a7d0'
				chat_msgs_block.removeChild(document.getElementById('answer' + answerMes));
			}
			answerMes = -1;
			box.value = '';
		}
		files.innerHTML = '';
	}
	else
	{
		if(text.length > 0)
		{
			ws.send(JSON.stringify({
				notice: 1,
				group_id: `z`,
				content: text,
				reference: `${answerMes != -1 ? answerMes : ''}`,
				type: 1
			}));
			if(answerMes != -1){
				if(teach)
					document.getElementById('mes' + answerMes).style.backgroundColor = '#fff'
				else document.getElementById('mes' + answerMes).style.backgroundColor = '#92a7d0'
				chat_msgs_block.removeChild(document.getElementById('answer' + answerMes));
			}
			answerMes = -1;
			box.value = '';
		}
	}
		this.inputMove();
		downChat();
}

// Функция удаляет из чата логотип
	function removePict() 
	{
		if(msgs.children[0] && msgs.children[0].classList.contains('logotip'))
		msgs.innerHTML = '';
	}

function addMessage(data, layout, lastmes)
{
	removePict();
	let div = document.createElement('div');
	div.classList.add('fullMessage');
	let intoDiv = document.createElement('div');
	intoDiv.classList.add('messageChees');
	
	let answerMesBlock = document.createElement('img');
	answerMesBlock.classList.add('answerMesBlock');
	if(!data.isteacher)	answerMesBlock.classList.add('left_ans')
	else answerMesBlock.classList.add('right_ans')
	answerMesBlock.src = '/img/answerMes.png'
	answerMesBlock.addEventListener('click',function(e){
		answerOnMes(data.mes_id, data.isteacher);
	})
	intoDiv.appendChild(answerMesBlock);	

	data.is = data.sender_id == getCookie('SAI')? 1 : 0;
	if(data.isteacher == 1 ) data.is = 0;
	if (data.is === 1) {
		intoDiv.style.float = 'right';
	}else{
		intoDiv.style.float = 'left';
	}
	switch(Number(data.type))
	{
		case 1: addSMS(data, intoDiv); break;
		case 2: addPicture(data, intoDiv); break;
		case 3: addAudio(data, intoDiv); break;
		case 4: addFile(data, intoDiv); break;
		case 5: addVideo(data, intoDiv); break;
		case 7: addHomeWork(data, intoDiv); break;
		case 8: addinChatTest(data, intoDiv); break;
		default: console.log('Invalid Type'); break;
	}
	if(msgs.clientHeight < chat_block.clientHeight)
		chat_scrollBar.style.display = 'none'
	else{
		chat_scrollBar.style.display = 'block';
		ScrollChatActiv();
	}
	div.appendChild(intoDiv);
	if(lastmes)
		layout.insertBefore(div, layout.firstChild)
	else
	layout.appendChild(div);
}

function getComplete(delivered){
		let p = document.createElement('p');
		p.classList.add('complete');
	if(delivered == 0){
		p.innerHTML = `<img src="/mobile/img/noncomplete.svg">`;
	}else{
		p.innerHTML = `<img src="/mobile/img/complete.svg">`;
	}
	return p;
}

function getTimeMes(date){
	date = new Date(date);
	let now = new Date();
	let dat = '';
	if(date.getFullYear() == now.getFullYear() && date.getMonth() == now.getMonth()){
		if(date.getDate() == now.getDate())
			dat += 'Сегодня '
		else if(date.getDate() == now.getDate() - 1)
			dat += 'Вчера '
		else{
		if(date.getFullYear != new Date().getFullYear)
			dat += date.getFullYear() + '.';
		dat += date.getMonth() + '.' + date.getDate() + ' ';
	}
	}else{
		if(date.getFullYear != new Date().getFullYear)
			dat += date.getFullYear() + '.';
		dat += date.getMonth() + '.' + date.getDate() + ' ';
	}
		if(date.getHours() < 10)
			dat += '0' + date.getHours() + ':'; 
		else dat += date.getHours() + ':';  
		if(date.getMinutes() < 10)
			dat += '0' + date.getMinutes(); 
		else dat += date.getMinutes();

	return dat;
}

// Функция добавляет сообщение в чат
	function addSMS(data, layout) 
	{
		let div = document.createElement('div');
		div.id = 'mes' + data.mes_id;
		if(data.is){
			div.classList.add('right_message', 'text_message');
			layout.appendChild(getComplete(data.delivered));
		}
		else{
			div.classList.add('left_message', 'text_message');
			let p = document.createElement('p');
			p.classList.add('student_name');
			p.innerHTML = data.sender_name;
			if(data.isteacher == 1) p.classList.add('teacher'); layout.appendChild(p);
		}
		let dat = getTimeMes(data.dt);
		div.innerHTML =  '<p class="sms">'+data.content+'</p><div class="sms_date">' + dat +'</div>';
		if(data.reference){
			paintReferense(data,div);
		}
		layout.appendChild(div);
	}

// Функция добавляет картинку в чат
	function addPicture(data, layout) 
	{
		let div = document.createElement('div');
		div.id = 'mes' + data.mes_id;
		if(data.is){ 
			div.classList.add('right_message', 'img_message');
			layout.appendChild(getComplete(data.delivered));
		}
		else div.classList.add('left_message', 'img_message');

		let img = document.createElement('img');
		img.classList.add('chat_picture');
		img.src = '/common/files/' + data.content;

		img.addEventListener('click', function() 
		{
			showPopup(`<div style="width: 100%; height: 80vh;"><img src=/common/files/${data.content} style="max-width: 100%; max-height: 100%;"></img></div>`, 
				{border: 'none', background: 'transparent', maxHeight: '75%', maxWidth: '75%', curtain: true, top: '6vh', textAlign: 'center'});
			
		});

		if(data.title)
		{
			let p = document.createElement('p');
			p.innerHTML = data.title;
			p.classList.add('fileTitle');
			// if(data.isteacher == 1) p.classList.add('teacher'); 
			div.appendChild(p);
		}

		div.appendChild(img);

		if(!data.is)
		{
			let p = document.createElement('p');
			p.classList.add('student_name');
			p.innerHTML = data.sender_name;
			if(data.isteacher == 1) p.classList.add('teacher'); layout.appendChild(p);
		}


		let dat = getTimeMes(data.dt);
		let dt = document.createElement('div');
		dt.classList.add('sms_date');
		dt.innerHTML = dat;
		div.appendChild(dt);

		if(data.reference){
			paintReferense(data,div);
		}
		layout.appendChild(div);
	}



// Функция добавляет аудио в чат
	function addAudio(data, layout)
	{
		let div = document.createElement('div');
		div.id = 'mes' + data.mes_id;
		if(data.is) {
			div.classList.add('right_message');
			layout.appendChild(getComplete(data.delivered));
		}
		else div.classList.add('left_message');

		let table 	= document.createElement('table');
		let tr 		= document.createElement('tr');
		let pict_td = document.createElement('td');
		let line_td = document.createElement('td');
		let time_td = document.createElement('td');
		let line 	= document.createElement('div');
		line.classList.add('audio_line');

		line.addEventListener('touchend', (e)=>
			{
				if(!e.target.classList.contains('audio_progress') && progress == current_progress)
				{
					let max = line.offsetWidth;
					let cur = e.offsetX;

					let procent = cur/max;

					let toset = audio.duration * procent;
					audio.currentTime = toset;
				}
			});

		time_td.innerHTML = '00:00';
		time_td.classList.add('audio_time');

		let progress = document.createElement('div');
		progress.classList.add('audio_progress');

		let img = document.createElement('img');
		img.classList.add('play_btn');
		img.src = '/mobile/img/play.png'
		img.addEventListener('click', () => 
			{
				let ms = img.src.split('/');
				if(ms[ms.length-1] == 'play.png') 
				{
					let buts = document.getElementsByClassName('play_btn');
					for(let i = 0; i<buts.length; i++)
					{
						buts[i].src = '/mobile/img/play.png';
					}
					audio.src = '/common/files/' + data.content;
					audio.play(); 
					img.src = '/mobile/img/pause.png';

					current_time_td = time_td;
					current_progress = progress;
					current_img = img;
				}
				else 
				{
					img.src = '/mobile/img/play.png'
					audio.pause();
				}
			});

		line.appendChild(progress);
		line_td.appendChild(line);

		pict_td.appendChild(img);

		tr.appendChild(pict_td);
		tr.appendChild(line_td);
		tr.appendChild(time_td);
		table.appendChild(tr);
		if(data.title)
		{
			let p = document.createElement('p');
			p.innerHTML = data.title;
			p.classList.add('fileTitle');
			// if(data.isteacher == 1) p.classList.add('teacher'); 
			div.appendChild(p);
		}
		div.appendChild(table);

		if(!data.is)
		{
			let p = document.createElement('p');
			p.classList.add('student_name');
			p.innerHTML = data.sender_name;
			// if(data.isteacher == 1) p.classList.add('teacher'); 
			layout.appendChild(p);
		}
		

		let dat = getTimeMes(data.dt);
		let dt = document.createElement('div');
		dt.classList.add('sms_date');
		dt.innerHTML = dat;
		div.appendChild(dt);
		if(data.reference){
			paintReferense(data,div);
		}

		layout.appendChild(div);
	}

// Функция добавляет файл в чат
	function addFile(data, layout)
	{
		let div = document.createElement('div');
		div.id = 'mes' + data.mes_id;
		if(data.is) {
			div.classList.add('right_message');
			layout.appendChild(getComplete(data.delivered));
		}
		else div.classList.add('left_message');

		let file = document.createElement('div');

		let a = document.createElement('a');
		let img = document.createElement('img');
		img.src = '/mobile/img/download.ico';
		img.classList.add('download_file');
		a.href = '/common/files/' + data.content;
		a.classList.add('file_href');
		a.target = '_blank';
		a.appendChild(img);

		let filename = document.createElement('span');
		filename.classList.add('filename');
		let file_name = data.content;

		if(file_name.length > 7)
		{
			file_name = file_name.substr(0,10) + '...';
		}
		filename.innerHTML = file_name;
		filename.title = data.content;
		a.appendChild(filename);

		file.appendChild(a);
		if(data.title)
		{
			let p = document.createElement('p');
			p.innerHTML = data.title;
			p.classList.add('fileTitle');
			// if(data.isteacher == 1) p.classList.add('teacher'); 
			div.appendChild(p);
		}
		div.appendChild(file);

		if(!data.is)
		{
			let p = document.createElement('p');
			p.classList.add('student_name');
			p.innerHTML = data.sender_name;
			if(data.isteacher == 1) p.classList.add('teacher'); layout.appendChild(p);
		}

		let dat = getTimeMes(data.dt);
		let dt = document.createElement('div');
		dt.classList.add('sms_date');
		dt.innerHTML = dat;
		div.appendChild(dt);
		if(data.reference){
			paintReferense(data,div);
		}

		layout.appendChild(div);
	}

// Функция добавляет видео в чат
	function addVideo(data, layout)
	{
		let div = document.createElement('div');
		div.id = 'mes' + data.mes_id;
		if(data.is) {
			div.classList.add('right_message');
			layout.appendChild(getComplete(data.delivered));
		}
		else div.classList.add('left_message');

		let video = document.createElement('video');
		video.classList.add('chat_video');
		video.controls = 'true';
		video.src = '/common/files/' + data.content;
		if(data.title)
		{
			let p = document.createElement('p');
			p.innerHTML = data.title;
			p.classList.add('fileTitle');
			// if(data.isteacher == 1) p.classList.add('teacher'); 
			div.appendChild(p);
		}
		div.appendChild(video);

		if(!data.is)
		{
			let p = document.createElement('p');
			p.classList.add('student_name');
			p.innerHTML = data.sender_name;
			if(data.isteacher == 1) p.classList.add('teacher'); layout.appendChild(p);
		}

		let dat = getTimeMes(data.dt);
		let dt = document.createElement('div');
		dt.classList.add('sms_date');
		dt.innerHTML = dat;
		div.appendChild(dt);
		if(data.reference){
			paintReferense(data,div);
		}

		layout.appendChild(div);
	}


//Функция доюавляет дз в чат
	function addHomeWork(data, layout){
		let div = document.createElement('div');
		div.id = 'mes' + data.mes_id;
		if(data.isteacher) div.classList.add('left_message', 'testHref');

		let a = document.createElement('a');
		a.classList.add('hrefToTest');
		a.href = 'homework/' + data.content;
		a.title = data.title;
		let span = document.createElement('span');
		span.innerHTML = 'Задание';
		let img = document.createElement('img');
		img.src = '/mobile/img/if_book-write.svg';
		a.appendChild(span);
		a.appendChild(img);
		div.appendChild(a);

		let p = document.createElement('p');
		p.classList.add('student_name');
		p.innerHTML = data.sender_name;
		p.classList.add('teacher');
		layout.appendChild(p);

		let dat = getTimeMes(data.dt);
		let dt = document.createElement('div');
		dt.classList.add('sms_date');
		dt.innerHTML = dat;
		div.appendChild(dt);
		if(data.reference){
			paintReferense(data,div);
		}

		layout.appendChild(div);
	}

//Функция добавляет тест в чат
	function addinChatTest(data, layout){
		let div = document.createElement('div');
		div.id = 'mes' + data.mes_id;
		if(data.isteacher) div.classList.add('left_message', 'testHref');

		let a = document.createElement('a');
		a.classList.add('hrefToTest');
		POST('/test', `method=CHECK&&test_id=${data.content}`, function(res, status){
			if(status === 200){
				if(res.result[0].count || res.result[0].answers)
					a.href = 'testresult/' + data.content;
				else a.href = 'test/' + data.content;
			}else console.log(res);
		});
		a.title = data.title;
		let span = document.createElement('span');
		span.innerHTML = 'Тест';
		let img = document.createElement('img');
		img.src = '/mobile/img/if_notepad.svg';
		a.appendChild(span);
		a.appendChild(img);
		div.appendChild(a);

		let p = document.createElement('p');
		p.classList.add('student_name');
		p.innerHTML = data.sender_name;
		p.classList.add('teacher');
		layout.appendChild(p);

		let dat = getTimeMes(data.dt);
		let dt = document.createElement('div');
		dt.classList.add('sms_date');
		dt.innerHTML = dat;
		div.appendChild(dt);
		if(data.reference){
			paintReferense(data,div);
		}

		layout.appendChild(div);
	}

window.teach = true;
//Функция ответа на сообщение по id
function answerOnMes(id, isteacher){
	if(answerMes != -1){
			if(!teach)
				document.getElementById('mes' + answerMes).style.backgroundColor = '#92a7d0'
			else document.getElementById('mes' + answerMes).style.backgroundColor = '#fff'
			if(document.getElementById('answer' + answerMes))
			chat_msgs_block.removeChild(document.getElementById('answer' + answerMes));
	}
	if(answerMes == id){
		if(!teach)
			document.getElementById('mes' + answerMes).style.backgroundColor = '#92a7d0'
		else document.getElementById('mes' + answerMes).style.backgroundColor = '#fff'
		if(document.getElementById('answer' + answerMes))
		chat_msgs_block.removeChild(document.getElementById('answer' + answerMes));
		answerMes = -1;
	}else{
		answerMes = id
		let div = document.createElement('div');
		div.classList.add('refMesInBlock');
		div.id = 'answer' + id;
		div.innerHTML = `<div>${document.getElementById('mes' + id).innerHTML}</div>
		<img class="closeAns" src="/img/close.svg" id="closeAns">`;
		chat_msgs_block.appendChild(div);
		document.getElementById('closeAns').addEventListener('click', function(){{answerOnMes(id, isteacher)}})
		document.getElementById('mes' + id).style.backgroundColor = 'rgb(59, 170, 224)'
	}
	teach = isteacher;
}

//Функция распределения ответов по типам и их прикрепление
function paintReferense(data, layout){
	let div = document.createElement('div');
	div.classList.add('refer');
	switch(data.refType)
	{
		case 1: addRefSMS(data, div); 					break;
		case 2: addRefPicture(data, div); 				break;
		case 3: addRefAudio(data, div);				 	break;
		case 4: addRefFile(data, div); 					break;
		case 5: addRefVideo(data, div); 				break;
		case 7: addRefHomeWork(data, div);				break;
		case 8: addRefTest(data, div); 					break;
		default: console.log('Invalid chat type'); 		break;
	}
	div.addEventListener('click', function(e){
		gotoMes(data.reference)
	})
	layout.insertBefore(div, layout.firstChild)
}

function addRefSMS(data, layout){
	layout.innerHTML = `
		<p class="student_name select_name">${data.refSender}</p>
		<p class="sms">${data.refContent}</p>
	`	
}

function addRefPicture(data, layout){
	layout.innerHTML = `
		<p class="student_name select_name">${data.refSender}</p>
		${data.refTitle ? '<p class="fileTitle">' + data.refTitle + '</p>' : ''}
		<img class="chat_picture" src="common/files/${data.refContent}">
	`
}

function addRefAudio(data, layout){
	layout.innerHTML = `
		<p class="student_name select_name">${data.refSender}</p>
		${data.refTitle ? '<p class="fileTitle">' + data.refTitle + '</p>' : ''}
		<table>
			<tr>
				<td><img class="play_btn" src="/img/play.png"></td>
				<td>
					<span class="audio_line">
						<div class="audio_progress"></div>
					</span>
				</td>
				<td class="audio_time">00:00</td>
			</tr>
		</table>
	`
}

function addRefFile(data, layout){
	layout.innerHTML = `
		<p class="student_name select_name">${data.refSender}</p>
		${data.refTitle ? '<p class="fileTitle">' + data.refTitle + '</p>' : ''}
		<div title="${data.refContent}">
			<a class="file_href">
				<img src="/img/download.ico" class="download_file">
				<span class="filename">${data.refContent.length > 7 ? data.refContent.substr(0,10) + '...' : data.refContent}</span>
			</a>
		</div>
	`
}

function addRefVideo(data, layout){
	layout.innerHTML = `
		<p class="student_name select_name">${data.refSender}</p>
		${data.refTitle ? '<p class="fileTitle">' + data.refTitle + '</p>' : ''}
		<video class="chat_video" src="common/files/${data.refContent}"></video>
	`
}

function addRefHomeWork(data, layout){
	layout.innerHTML = `
		<p class="student_name select_name">${data.refSender}</p>
		${data.refTitle ? '<p class="fileTitle">' + data.refTitle + '</p>' : ''}
		<div class="hrefToTest">
			<img class="chat_picture" src="/img/if_book-write.svg">
		</div>
	`
}

function addRefTest(data, layout){
	layout.innerHTML = `
		<p class="student_name select_name">${data.refSender}</p>
		${data.refTitle ? '<p class="fileTitle">' + data.refTitle + '</p>' : ''}
		<div class="hrefToTest">
			<img class="chat_picture" src="/img/if_notepad.svg">
		</div>
	`
}

function gotoMes(ref){
	if(document.getElementById('mes'+ Number(ref))){
		document.getElementById('mes'+ Number(ref)).classList.add('selectMes');
		setTimeout(function(){
			document.getElementById('mes'+ Number(ref)).classList.remove('selectMes');
		}, 1000)
		chat_block.scrollTo({
					    top: document.getElementById('mes'+ ref).offsetTop - 15,
					    behavior: "smooth"
					});
	}else{
		POST('/chat', 'method=GET&&mes_id='+mes_id+'&group_id='+group_id, (res, status)=>{
			if(status == 200)
			{
				let messages = res.body;
				mes_id = messages[messages.length-1].mes_id;
				controlBox.style.display = 'block';
				for(let i = 0; i<messages.length; i++)
					addMessage(messages[i], msgs, true);
				loader = true;
				group_id = messages[0].group_id;

				ws.send(JSON.stringify({
					notice: 8,
					group_id: `${group_id}`
				}));
				gotoMes(ref)
			}
		});
	}
}

function returnerTime(time){
	let minuts = 0;
	let seconds = 0;
	if(time > 60)
	while(time > 60){
		minuts++;
		time -= 60;
	}
	seconds = time;
	if(minuts < 10) minuts = '0' + minuts;
	if(seconds < 10) seconds = '0' + seconds;
	return minuts + ':' + seconds;
}

function listeners()
{
// Движение слайдера!
	audio.addEventListener('timeupdate', () =>
		{
			current_time_td.innerHTML = returnerTime(audio.currentTime^0);

			let position = audio.currentTime / audio.duration * 100;
			current_progress.style.left = position + '%';

			if(audio.currentTime == audio.duration) 	
			{
				current_img.src = '/mobile/img/play.png';
				current_progress.style.left = '0%';
			}
		});

// Обработка нажатия Enter в поле text
	document.getElementById('text').addEventListener('keyup', function(ev) {
		ws.send(JSON.stringify({notice: 11}))
		if(ev.ctrlKey && ev.keyCode == 13) 
		{
			let box = document.getElementById('text'); 
			box.value = box.value + '\n';
		}
		else if(!ev.ctrlKey && ev.key == 'Enter') document.getElementById('send').click();
	});


// Обработка нажания на микрофон
	var mediaRecorder ;
	var audioStream ;
	let canSendAudio = false;
	let audioTimeout = null;

	navigator.getUserMedia  = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;
	navigator.getUserMedia({video: false, audio: true},  function(stream)
		{
			audioStream = stream;
			mediaRecorder = new MediaRecorder(audioStream);
			// mediaRecorder.stop();

			mediaRecorder.ondataavailable = function(e) { if(canSendAudio) sendAudio(e); canSendAudio = false; }

		}, function(e) 
		{
			console.log(e);
		});

	document.getElementById('microfon').addEventListener('touchstart', function(e)
		{
			e.preventDefault();
			// audioStream.getTracks()[0].start();
			audioTimeout = setTimeout(()=>
				{
					canSendAudio = true;
				}, 3000);

			mediaRecorder.start();
			animateMicrofon();	
			
			document.getElementById('microfon').addEventListener('touchend', (e)=>
			{
				console.log(mediaRecorder.stop.toString())
				mediaRecorder.stop();
				animateMicrofon();
				clearTimeout(audioTimeout);
			});
		});

	function sendAudio(e)
	{
		sendFile('/sendFile', e.data, (response) => 
			{
				ws.send(JSON.stringify({
					notice: 1,
					group_id: 'z',
					content: response,
					type: 3
				}));
			},'Voice.wav');
	}

// Обработка нажатия на корзину
	files.addEventListener('click', function(e)
		{
			if(e.target.classList.contains('rem_img'))
			{
				files.removeChild(document.getElementById(e.target.getAttribute('delete')));
			}
			inputMove();
		});

// Обработка добавления файла
	file.addEventListener('change', function(e)
	{
		let fl = file.files[0];
		let type = getFileType(fl);

		let img = document.createElement('img');
		img.src = '/mobile/img/2.svg';
		img.style.position = 'fixed';
		img.style.top = '40%';
		img.style.left = '40%';
		document.body.appendChild(img)

		if(fl.type != 'text/javascript' && fl.type != 'application/x-javascript')
			sendFile('/sendFile', fl, (response) => 
			{
				hangFile( fl.name, type, response);
				document.body.removeChild(img);
			})
		else GetNotice('application','В чат нельзя отправлять файлы подобного формата!')
	});
}

// Функция прикрептяет файл к чату
	function hangFile(name, type, path)
	{
		let div = document.createElement('div');
		let img = document.createElement('img');
		let a 	= document.createElement('span');
		let rem = document.createElement('img');

		div.classList.add('file_block');
		img.classList.add('file_img');
		a.classList.add('fname');
		rem.classList.add('rem_img');

		div.id = makeid();
		div.setAttribute('type', type);
		div.setAttribute('path', path)
		rem.setAttribute('delete', div.id);

		img.src = '/mobile/img/file.png';
		rem.src = '/mobile/img/rem.png';
		
		a.title = name;

		if(name.length > 20)
		{
			name = name.substr(0,20) + '...';
		}

		a.innerHTML = name;
		div.appendChild(img);
		div.appendChild(a);
		div.appendChild(rem);
		files.appendChild(div);
		this.inputMove();
	}
	function inputMove(){
		if(files.children.length == 0){
			chat_msgs_block.style.height = "90%";
		}
		if(files.children.length == 1 || files.children.length == 2 || files.children.length == 3){
			chat_msgs_block.style.height = "82%";
		}
		if(files.children.length >= 2){
			chat_msgs_block.style.height = "75%";
		}
	}

	let minute = 0;
	let seconds = 0;
	let activeMic = false;
	let timer;
	let value = '';

	function animateMicrofon()
	{
		if(activeMic == false)
		{
			value = text.value;
			text.value = '';
			microfon.classList.add('animateMic');
			activeMic = true;
			text.placeholder = '0'+minute + ':0' + seconds;
			text.disabled = true;
			timer = setInterval(function()
			{
				seconds++;
				if(seconds >= 60) {minute++; seconds = 0}
				if(seconds < 10) intSeconds = '0' + seconds; 
				else intSeconds = seconds;
				if(minute < 10) intMinute = '0' + minute; 
				else intMinute = minute
				text.placeholder = intMinute + ':' + intSeconds;
			},1000)
		}
		else
		{
			clearInterval(timer);
			minute = 0;
			seconds = 0;
			microfon.classList.remove('animateMic');
			activeMic = false;
			text.disabled = false;
			text.placeholder = "Введите сообщение";
			text.value = value;
		}
	}	




	function downChat()
	{
		chat_block.scrollTo({
		    top: chat_block.scrollHeight,
		    behavior: "smooth"
		});
	}

//Функция запускает скролл
	function ScrollChatActiv(){
		//Скролл прокруткой в чате
			chat_block.onscroll = function(){
				if ((chat_block.scrollHeight - chat_block.scrollTop) > chat_block.clientHeight + 250) 
				{
					document.getElementById('bottom_arrow').style.bottom = '15%';
					document.getElementById('bottom_arrow').style.opacity = '1';
					document.getElementById('bottom_arrow').style.visibility = 'visible';
				}
				else 
				{
					document.getElementById('bottom_arrow').style.bottom = '-15%';
					document.getElementById('bottom_arrow').style.opacity = '0';
					document.getElementById('bottom_arrow').style.visibility = 'hidden';
				}

				if (chat_block.scrollTop < 150 && loader === true) 
				{
					loader = false;
					POST('/chat', 'method=GET&&mes_id='+mes_id+'&group_id='+group_id, (res, status)=>{
						if(status == 200)
						{
							let messages = res.body;
							mes_id = messages[messages.length-1].mes_id;
							controlBox.style.display = 'block';
							for(let i = 0; i<messages.length; i++)
								addMessage(messages[i], msgs, true);
							loader = true;
							group_id = messages[0].group_id;

							ws.send(JSON.stringify({
								notice: 8,
								group_id: `${group_id}`
							}));
							

						}
					}); 
				}
				
				if(chat_block.clientHeight <  msgs.clientHeight && chat_scrollPerson == false){
					if(chat_blockVSbody != chat_block.clientHeight / msgs.clientHeight) chat_blockVSbody = chat_block.clientHeight / msgs.clientHeight;
					chat_scrollBar.style.height = (chat_block.clientHeight * chat_blockVSbody) + 'px';
					// if(msgsChildren != msgs.children.length){
						let style;
						let marginTop;
						chat_StudentsCount = 0;
						for (var i = 0; i < msgs.children.length; i++) {	
							chat_StudentsCount += msgs.children[i].clientHeight;
							style = window.getComputedStyle(msgs.children[i]);
							marginTop = style.getPropertyValue('margin-top'); 
							chat_StudentsCount += Number(marginTop.substring(0, marginTop.length - 2))
						}
						chat_msgsChildren = msgs.children.length;
						chat_StudentsCount /= chat_block.clientHeight;
					// }
					chat_scrollBar.style.top = (chat_block.scrollTop/chat_StudentsCount) + 'px';
				}
			}
	let config = { attributes: true, childList: true, subtree: true};

	let callback = function(mutationsList, observer) {
	    for(let mutation of mutationsList) {
            chat_scrollBar.style.height = (Math.pow(chat_block.clientHeight, 2) / msgs.clientHeight) + 'px';
            if(msgs.clientHeight < chat_block.clientHeight) chat_scrollBar.style.display = 'none'
			else chat_scrollBar.style.display = 'block';
	    }
	};

	let observer = new MutationObserver(callback);

	observer.observe(msgs, config);
		}

let chang = false;
let saveHeight = chat_msgs_block.clientHeight;
function changeMainBlock(foc){
	if(foc){
		setTimeout(()=>{
			chat_msgs_block.style.height = `calc(${document.body.clientHeight}px - (90% - ${controlBox.clientHeight}px))`;
			chang = true;

		},500)
	}else{
		if(chang){
			chat_msgs_block.style.height = saveHeight + 'px';
			chang = true;
		}
	}
}	
var ro = new ResizeObserver( entries => {
  for (let entry of entries) {
    if(chang){
		chat_msgs_block.style.height = saveHeight + 'px';
		chang = true;
	}
  }
});
ro.observe(document.body);
</script>
</body>
</html>